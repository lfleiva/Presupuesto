/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.presupuesto.vista;

import com.presupuesto.control.AccesoDatos;
import com.presupuesto.modelo.Acceso;
import com.presupuesto.modelo.Entidad;
import com.presupuesto.modelo.Vigencia;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis Fernando Leiva
 */
public class Inicio extends javax.swing.JFrame {

    AccesoDatos accesoDatos;

    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
        // Icono
        setIconImage(new ImageIcon(getClass().getResource("/com/presupuesto/img/Icono.png")).getImage());
        this.setLocationRelativeTo(null);
        consultarEntidad();
        consultarVigencias();
        frContrasena.requestFocus();
    }

    private void consultarVigencias() {
        accesoDatos = new AccesoDatos();
        List<Vigencia> listaVigencia = new ArrayList<Vigencia>();

        listaVigencia = accesoDatos.consultarTodos(new Vigencia(), Vigencia.class);

        if (!listaVigencia.isEmpty()) {
            for (Vigencia vigencia : listaVigencia) {
                if (vigencia.getActiva()) {
                    frListaVigencia.addItem(vigencia.getVigencia() + " (Activa)");
                    frListaVigencia.setSelectedItem(vigencia.getVigencia() + " (Activa)");
                } else {
                    frListaVigencia.addItem(vigencia.getVigencia());
                }
            }
        }
    }

    private void consultarEntidad() {
        accesoDatos = new AccesoDatos();
        Entidad entidad = new Entidad();

        entidad = accesoDatos.consultarTodos(entidad, Entidad.class).get(0);

        frNombreEmpresa.setText(entidad.getNombre());
        //frNitEntidad.setText("NIT. " + entidad.getNit());
    }

    private boolean validarContrasena() {
        Acceso acceso = new Acceso();
        boolean validacionExitosa = true;

        acceso = accesoDatos.consultarTodos(acceso, Acceso.class).get(0);
        String pass = new String(frContrasena.getPassword());

        if (!pass.equals(acceso.getPassword())) {
            validacionExitosa = false;
        }

        return validacionExitosa;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cerrar = new javax.swing.JLabel();
        labelVigencia = new javax.swing.JLabel();
        frListaVigencia = new javax.swing.JComboBox<>();
        frNombreEmpresa = new javax.swing.JLabel();
        labelPass = new javax.swing.JLabel();
        frContrasena = new javax.swing.JPasswordField();
        botonIniciar = new javax.swing.JButton();
        labelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(505, 306));
        setMinimumSize(new java.awt.Dimension(505, 306));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(505, 306));
        setResizable(false);
        getContentPane().setLayout(null);

        cerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cerrarMousePressed(evt);
            }
        });
        getContentPane().add(cerrar);
        cerrar.setBounds(480, 10, 20, 20);

        labelVigencia.setText("Vigencia");
        getContentPane().add(labelVigencia);
        labelVigencia.setBounds(60, 170, 50, 14);

        getContentPane().add(frListaVigencia);
        frListaVigencia.setBounds(110, 170, 190, 20);

        frNombreEmpresa.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        getContentPane().add(frNombreEmpresa);
        frNombreEmpresa.setBounds(30, 100, 440, 30);

        labelPass.setText("Contraseña");
        getContentPane().add(labelPass);
        labelPass.setBounds(40, 200, 60, 14);

        frContrasena.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                frContrasenaKeyTyped(evt);
            }
        });
        getContentPane().add(frContrasena);
        frContrasena.setBounds(110, 200, 110, 20);

        botonIniciar.setText("Iniciar");
        botonIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIniciarActionPerformed(evt);
            }
        });
        getContentPane().add(botonIniciar);
        botonIniciar.setBounds(110, 230, 61, 23);

        labelFondo.setBackground(new java.awt.Color(0, 0, 0));
        labelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/presupuesto/img/Fondo_Inicio.png"))); // NOI18N
        getContentPane().add(labelFondo);
        labelFondo.setBounds(0, 0, 510, 310);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cerrarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarMousePressed
        System.exit(0);
    }//GEN-LAST:event_cerrarMousePressed

    private void botonIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIniciarActionPerformed
        if (validarContrasena()) {
            String vigenciaSeleccionada = frListaVigencia.getSelectedItem().toString();
            int validar = vigenciaSeleccionada.indexOf("Activa");

            if (validar > 0) {
                vigenciaSeleccionada = vigenciaSeleccionada.substring(0, validar - 2).trim();
            } else {
                vigenciaSeleccionada = vigenciaSeleccionada.trim();
            }

            List<Vigencia> listaVigencias = new ArrayList<Vigencia>();
            Vigencia vigencia = new Vigencia();
            vigencia.setVigencia(vigenciaSeleccionada);

            vigencia = accesoDatos.consultarTodos(vigencia, Vigencia.class).get(0);

            if (!vigencia.getActiva()) {
                listaVigencias = accesoDatos.consultarTodos(new Vigencia(), Vigencia.class);

                for (Vigencia vigenciaIterada : listaVigencias) {
                    if (vigencia.getIdVigencia().equals(vigenciaIterada.getIdVigencia())) {
                        vigencia.setActiva(true);
                        vigencia = accesoDatos.persistirActualizar(vigencia);
                    } else {
                        vigenciaIterada.setActiva(false);
                        accesoDatos.persistirActualizar(vigenciaIterada);
                    }
                }
            }

            Home home = new Home();
            home.setVisible(true);
            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, "Error en contraseña", "Verificación Contraseña", 0);
        }
    }//GEN-LAST:event_botonIniciarActionPerformed

    private void frContrasenaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_frContrasenaKeyTyped
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (validarContrasena()) {
                String vigenciaSeleccionada = frListaVigencia.getSelectedItem().toString();
                int validar = vigenciaSeleccionada.indexOf("Activa");

                if (validar > 0) {
                    vigenciaSeleccionada = vigenciaSeleccionada.substring(0, validar - 2).trim();
                } else {
                    vigenciaSeleccionada = vigenciaSeleccionada.trim();
                }

                List<Vigencia> listaVigencias = new ArrayList<Vigencia>();
                Vigencia vigencia = new Vigencia();
                vigencia.setVigencia(vigenciaSeleccionada);

                vigencia = accesoDatos.consultarTodos(vigencia, Vigencia.class).get(0);

                if (!vigencia.getActiva()) {
                    listaVigencias = accesoDatos.consultarTodos(new Vigencia(), Vigencia.class);

                    for (Vigencia vigenciaIterada : listaVigencias) {
                        if (vigencia.getIdVigencia().equals(vigenciaIterada.getIdVigencia())) {
                            vigencia.setActiva(true);
                            vigencia = accesoDatos.persistirActualizar(vigencia);
                        } else {
                            vigenciaIterada.setActiva(false);
                            accesoDatos.persistirActualizar(vigenciaIterada);
                        }
                    }
                }

                Home home = new Home();
                home.setVisible(true);
                this.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(null, "Error en contraseña", "Verificación Contraseña", 0);
            }
        }
    }//GEN-LAST:event_frContrasenaKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonIniciar;
    private javax.swing.JLabel cerrar;
    private javax.swing.JPasswordField frContrasena;
    private javax.swing.JComboBox<String> frListaVigencia;
    private javax.swing.JLabel frNombreEmpresa;
    private javax.swing.JLabel labelFondo;
    private javax.swing.JLabel labelPass;
    private javax.swing.JLabel labelVigencia;
    // End of variables declaration//GEN-END:variables
}
