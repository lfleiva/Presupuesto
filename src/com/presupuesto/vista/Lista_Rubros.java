/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.presupuesto.vista;

import com.presupuesto.control.AccesoDatos;
import com.presupuesto.modelo.Rubro;
import com.presupuesto.modelo.Vigencia;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luis Fernando Leiva
 */
public class Lista_Rubros extends javax.swing.JDialog {

    /***** Constantes de la clase *****/
    public static Rubro_Presupuestal rubroPresupuestal;
    
    /***** Atributos de la clase *****/
    AccesoDatos accesoDatos;
    Vigencia vigencia;
            
    /**
     * Creates new form Lista_Rubros
     */
    public Lista_Rubros(Rubro_Presupuestal parent, boolean modal) {
        //super(parent, modal);
        this.rubroPresupuestal = parent;
        this.setModal(modal);
        initComponents();
        consultarVigencia();
        consultarRubrosRegistrados();
        
        // Icono
        setIconImage(new ImageIcon(getClass().getResource("/com/presupuesto/img/Icono.png")).getImage());
    }
    
    /**
     * Metodo que consulta la vigencia activa
     */
    private void consultarVigencia() {
        accesoDatos = new AccesoDatos();
        vigencia = new Vigencia();
        vigencia = accesoDatos.consultarVigenciaActiva();
    }
    
    private void consultarRubrosRegistrados() {
        accesoDatos = new AccesoDatos();
        Rubro rubro = new Rubro();
        List<Rubro> listaRubros = new ArrayList<Rubro>();

        listaRubros = accesoDatos.consultarTodosPorVigencia(Rubro.class, vigencia);

        if (listaRubros != null && !listaRubros.isEmpty()) {
            DefaultTableModel model = new DefaultTableModel();
            model = (DefaultTableModel) tablaListaRubros.getModel();
            
            DefaultTableCellRenderer Alinear = new DefaultTableCellRenderer();
            Alinear.setHorizontalAlignment(SwingConstants.RIGHT);
            tablaListaRubros.getColumnModel().getColumn(2).setCellRenderer(Alinear);


            for (Rubro rubroIterado : listaRubros) {

                switch(rubroIterado.getTipoRubro().getTipoRubro()) {
                    case "Cuenta":
                        model.addRow(new Object[]{rubroIterado.getCodigo(), rubroIterado.getNombre(), "$0.0", rubroIterado.getTipoRubro().getTipoRubro(), "", ""});
                        break;                    
                    case "Subcuenta":
                        model.addRow(new Object[]{rubroIterado.getCodigo(), rubroIterado.getNombre(), "$0.0", rubroIterado.getTipoRubro().getTipoRubro(), rubroIterado.getCuenta().getNombre(), ""});
                        break;                        
                    case "Auxiliar":
                        model.addRow(new Object[]{rubroIterado.getCodigo(), rubroIterado.getNombre(), "$" + formatoNumeroDecimales(rubroIterado.getValor().toString()), rubroIterado.getTipoRubro().getTipoRubro(), rubroIterado.getCuenta().getNombre(), rubroIterado.getSubcuenta().getNombre()});
                        break;
                }                               
            }
        }
    }
    
    private String formatoNumeroDecimales(String valor) {
        DecimalFormat formateador = new DecimalFormat("###,###,###.##");
        valor = valor.replace(",", "");
        double decimales = Double.parseDouble(valor);
        String valorFormateado = formateador.format(decimales);
        valorFormateado = valorFormateado.replace(",", "#");
        valorFormateado = valorFormateado.replace(".", ",");
        valorFormateado = valorFormateado.replace("#", ".");
        return valorFormateado;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaListaRubros = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        botonSeleccionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 400));
        setMinimumSize(new java.awt.Dimension(800, 400));

        tablaListaRubros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rubro", "Nombre", "Valor", "Tipo", "Cuenta", "Subcuenta"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaListaRubros);
        if (tablaListaRubros.getColumnModel().getColumnCount() > 0) {
            tablaListaRubros.getColumnModel().getColumn(0).setMinWidth(70);
            tablaListaRubros.getColumnModel().getColumn(0).setPreferredWidth(70);
            tablaListaRubros.getColumnModel().getColumn(0).setMaxWidth(70);
            tablaListaRubros.getColumnModel().getColumn(1).setMinWidth(250);
            tablaListaRubros.getColumnModel().getColumn(1).setPreferredWidth(250);
            tablaListaRubros.getColumnModel().getColumn(1).setMaxWidth(250);
            tablaListaRubros.getColumnModel().getColumn(2).setMinWidth(80);
            tablaListaRubros.getColumnModel().getColumn(2).setPreferredWidth(80);
            tablaListaRubros.getColumnModel().getColumn(2).setMaxWidth(80);
            tablaListaRubros.getColumnModel().getColumn(3).setMinWidth(70);
            tablaListaRubros.getColumnModel().getColumn(3).setPreferredWidth(70);
            tablaListaRubros.getColumnModel().getColumn(3).setMaxWidth(70);
        }

        jLabel1.setText("Rubros Registrados");

        botonSeleccionar.setText("Seleccionar");
        botonSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSeleccionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonSeleccionar)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonSeleccionar)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSeleccionarActionPerformed
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) tablaListaRubros.getModel();
        
        int filaSeleccionada = tablaListaRubros.getSelectedRow();
        
        if(filaSeleccionada != -1) {
            String rubroSeleccionado = model.getValueAt(filaSeleccionada, 0).toString();
            rubroPresupuestal.cargarRubroSeleccionado(rubroSeleccionado);
        }
        
        this.setVisible(false);
    }//GEN-LAST:event_botonSeleccionarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lista_Rubros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lista_Rubros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lista_Rubros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lista_Rubros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Lista_Rubros dialog = new Lista_Rubros(rubroPresupuestal, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonSeleccionar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaListaRubros;
    // End of variables declaration//GEN-END:variables
}
