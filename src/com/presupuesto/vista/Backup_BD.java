/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.presupuesto.vista;

import java.io.BufferedReader;
import java.io.File;
import java.io.InputStreamReader;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis Fernando Leiva
 */
public class Backup_BD extends javax.swing.JDialog {

    public static Home home;

    /**
     * Creates new form Backup_BD
     */
    public Backup_BD(Home parent, boolean modal) {
        this.home = parent;
        this.setModal(modal);
        initComponents();

        // Icono
        setIconImage(new ImageIcon(getClass().getResource("/com/presupuesto/img/Icono.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelExportar = new javax.swing.JLabel();
        frRuta = new javax.swing.JTextField();
        botonExaminar = new javax.swing.JButton();
        botonExportar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(422, 123));
        setMinimumSize(new java.awt.Dimension(422, 123));

        labelExportar.setText("Exportar Base de Datos");

        frRuta.setEnabled(false);

        botonExaminar.setText("...");
        botonExaminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonExaminarActionPerformed(evt);
            }
        });

        botonExportar.setText("Exportar");
        botonExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonExportarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonExportar)
                    .addComponent(labelExportar)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(frRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonExaminar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(labelExportar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(frRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonExaminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonExportar)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonExaminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonExaminarActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = fileChooser.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            frRuta.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_botonExaminarActionPerformed

    private void botonExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonExportarActionPerformed

        if (!frRuta.getText().trim().equals("")) {
            Process proc = null;
            String errs = "";
            File archivo = new File(frRuta.getText().trim() + "\\Presupuesto_" + new Date().getTime() + ".backup");
            String[] pros = new String[5];
            pros[0] = "C:\\Program Files\\MySQL\\MySQL Server 5.5\\bin\\mysqldump";
            pros[1] = "--user=root";
            pros[2] = "--password=" + "leiva";
            pros[3] = ("" + "presupuesto");
            pros[4] = "--result-file=" + archivo.getPath();
            System.out.println(">> Respaldo de base de datos: " + pros[3]);            
            try {
                BufferedReader brin;
                BufferedReader brer;
                int caracter;
                proc = Runtime.getRuntime().exec(pros);
                brin = new BufferedReader(new InputStreamReader(proc.getInputStream()));
                brer = new BufferedReader(new InputStreamReader(proc.getErrorStream()));
                if (archivo.isFile()) {
                    archivo.delete();
                }
                archivo.createNewFile();
                do {
                    caracter = brin.read();
                } while (caracter != -1);
                do {
                    caracter = brer.read();
                    if (caracter != -1) {
                        errs += "" + (char) caracter;
                    }
                } while (caracter != -1);
                proc.waitFor();
                brin.close();
                brer.close();
                if (errs.equals("")) {
                    System.out.println("\n>> Respaldo realizado");
                } else {
                    archivo.delete();
                    System.out.println("\n>> Ocurrieron errores al intentar la accion:\n" + errs);
                }
            } catch (Exception exc) {
                System.out.println("\n>> Ocurrio un error:\n" + exc.getMessage());
            }
            
            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una directorio para guardar el Backup de la base de datos", "Verificaci√≥n Backup Base de Datos", 0);
        }
    }//GEN-LAST:event_botonExportarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Backup_BD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Backup_BD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Backup_BD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Backup_BD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Backup_BD dialog = new Backup_BD(home, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonExaminar;
    private javax.swing.JButton botonExportar;
    private javax.swing.JTextField frRuta;
    private javax.swing.JLabel labelExportar;
    // End of variables declaration//GEN-END:variables
}
